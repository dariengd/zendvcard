<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../../../library/App/Data/Vcard/Generator.php';

/**
 * Test class for App_Data_Vcard_Generator.
 * Generated by PHPUnit on 2010-10-13 at 14:25:08.
 */
class App_Data_Vcard_GeneratorTest extends PHPUnit_Framework_TestCase
{

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	public function testSimpleVcardThomasSchaaf()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Thomas")
						->setLastname("Schaaf")
						->setFullname("Thomas Schaaf");
		$outputString = App_Data_Vcard_Generator::generate($vcardObject);
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:3.0\r\nFN:Thomas Schaaf\r\nN:Schaaf;Thomas;;;\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}

	public function testPhonenumberVcardThomasSchaaf()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Thomas")
						->setLastname("Schaaf")
						->setFullname("Thomas Schaaf")
						->addPhonenumber("+4953123799986", array(App_Data_Vcard::TELEPHONEHOME));
		$outputString = App_Data_Vcard_Generator::generate($vcardObject);
		//echo $outputString;
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:3.0\r\nFN:Thomas Schaaf\r\nN:Schaaf;Thomas;;;\r\nTEL;HOME:+4953123799986\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}

	public function testVcardSebastianHoitz()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Sebastian")
						->setLastname("Hoitz")
						->setFullname("Sebastian Hoitz")
						->setOrganization("komola UG")
						->setGender(App_Data_Vcard::GENDERMALE)
						->setRevision("20100812T13:40:40Z")
						->setBirthday("1990-12-12")
						->addPhonenumber("+495313804200", array(App_Data_Vcard::TELEPHONEWORK, App_Data_Vcard::TELEPHONEVOICE))
						->addPhonenumber("+491752517038", array(App_Data_Vcard::TELEPHONECELL, App_Data_Vcard::TELEPHONEVOICE))
						->addUrl("http://komola.de", App_Data_Vcard::URLWORK)
						->addEmail("sebastian.hoitz@komola.de", array(App_Data_Vcard::EMAILPREF, App_Data_Vcard::EMAILINTERNET))
						->addAddress(array('street' => 'Rebenring 33',
								'city' => 'Braunschweig',
								'state' => 'Niedersachsen',
								'zip' => '38116',
								'country' => 'Germany',
								'type' => array(App_Data_Vcard::ADDRESSWORK)));
		$outputString = App_Data_Vcard_Generator::generate($vcardObject, App_Data_Vcard::VERSION21);
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:2.1\r\nFN:Sebastian Hoitz\r\nN:Hoitz;Sebastian;;;\r\nBDAY:1990-12-12\r\nADR;WORK:;;Rebenring 33;Braunschweig;Niedersachsen;38116;Germany\r\nTEL;WORK;VOICE:+495313804200\r\nTEL;CELL;VOICE:+491752517038\r\nEMAIL;PREF;INTERNET:sebastian.hoitz@komola.de\r\nORG:komola UG;;\r\nREV:20100812T13:40:40Z\r\nURL;WORK:http://komola.de\r\nX-GENDER:Male\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}

	public function testVcardShortSebastianHoitz()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Sebastian")
						->setLastname("Hoitz")
						->setFullname("Sebastian Hoitz")
						->setOrganization("komola UG")
						->setGender(App_Data_Vcard::GENDERMALE)
						->setRevision("20100812T13:40:40Z")
						->setBirthday("1990-12-12")
						->addPhonenumber(array(
								array('value' => "+495313804200", 'type' => array(App_Data_Vcard::TELEPHONEWORK, App_Data_Vcard::TELEPHONEVOICE)),
								array('value' => "+491752517038", 'type' => array(App_Data_Vcard::TELEPHONECELL, App_Data_Vcard::TELEPHONEVOICE)))
						)
						->addUrl("http://komola.de", App_Data_Vcard::URLWORK)
						->addEmail("sebastian.hoitz@komola.de", array(App_Data_Vcard::EMAILPREF, App_Data_Vcard::EMAILINTERNET))
						->addAddress(array('street' => 'Rebenring 33',
								'city' => 'Braunschweig',
								'state' => 'Niedersachsen',
								'zip' => '38116',
								'country' => 'Germany',
								'type' => array(App_Data_Vcard::ADDRESSWORK)));
		$outputString = App_Data_Vcard_Generator::generate($vcardObject, App_Data_Vcard::VERSION21);
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:2.1\r\nFN:Sebastian Hoitz\r\nN:Hoitz;Sebastian;;;\r\nBDAY:1990-12-12\r\nADR;WORK:;;Rebenring 33;Braunschweig;Niedersachsen;38116;Germany\r\nTEL;WORK;VOICE:+495313804200\r\nTEL;CELL;VOICE:+491752517038\r\nEMAIL;PREF;INTERNET:sebastian.hoitz@komola.de\r\nORG:komola UG;;\r\nREV:20100812T13:40:40Z\r\nURL;WORK:http://komola.de\r\nX-GENDER:Male\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}

	public function testVcardIm()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Sebastian")
						->setLastname("Hoitz")
						->setFullname("Sebastian Hoitz")
						->addInstantmessenger('nekromanter', App_Data_Vcard::IMSKYPE);
		$outputString = App_Data_Vcard_Generator::generate($vcardObject);
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:3.0\r\nFN:Sebastian Hoitz\r\nN:Hoitz;Sebastian;;;\r\nX-SKYPE:nekromanter\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}

	public function testMulti()
	{
		$vcardObject = new App_Data_Vcard();
		$vcardObject->setFirstname("Vorname 1")
						->setLastname("Nachname 1")
						->setFullname("Vorname 1 Nachname 1")
						->addInstantmessenger('test1', App_Data_Vcard::IMSKYPE);
		$vcardObject2 = new App_Data_Vcard();
		$vcardObject2->setFirstname("Vorname 2")
						->setLastname("Nachname 2")
						->setFullname("Vorname 2 Nachname 2")
						->addInstantmessenger('asdf', App_Data_Vcard::IMSKYPE);
		$outputString = App_Data_Vcard_Generator::generate(array($vcardObject, $vcardObject2));
		$expectedOutput = "BEGIN:VCARD\r\nVERSION:3.0\r\nFN:Vorname 1 Nachname 1\r\nN:Nachname 1;Vorname 1;;;\r\nX-SKYPE:test1\r\nEND:VCARD\r\nBEGIN:VCARD\r\nVERSION:3.0\r\nFN:Vorname 2 Nachname 2\r\nN:Nachname 2;Vorname 2;;;\r\nX-SKYPE:asdf\r\nEND:VCARD";
		$this->assertEquals($outputString, $expectedOutput);
	}
}
?>
